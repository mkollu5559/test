import sys
import os
import pytest
from unittest.mock import patch

# Add lambda path to sys.path
sys.path.append(os.path.abspath("module/aws/lambda/s3notification"))

# Import the lambda module after path is set
import lambda as lambda_module

@pytest.fixture
def s3_event():
    return {
        "Records": [{
            "eventTime": "2024-03-19T12:00:00Z",
            "s3": {
                "bucket": {"name": "test-bucket"},
                "object": {"key": "test-file.txt", "size": 12345}
            }
        }]
    }

@patch.dict("lambda_module.os.environ", {
    "TOPIC_ARN": "arn:aws:sns:us-east-1:123456789012:MyTopic"
})
@patch("lambda_module.handle_publish_sns")
def test_lambda_handler(mock_publish, s3_event):
    mock_publish.return_value = {"MessageId": "mock-message-id"}

    response = lambda_module.lambda_handler(s3_event, None)
    print(f"DEBUG: Lambda Handler Response: {response}")

    assert response is not None, "lambda_handler returned None"
    assert "MessageId" in response
    assert response["MessageId"] == "mock-message-id"
    mock_publish.assert_called_once()
